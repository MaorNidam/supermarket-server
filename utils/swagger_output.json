{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Online Shop API",
    "description": "Description of the server API.",
    "contact": {
      "email": "nidamaor@gmail.com"
    }
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "users",
      "description": "User operations, Login / Register"
    },
    {
      "name": "carts",
      "description": "Cart operations."
    },
    {
      "name": "cart-items",
      "description": "Cart-Items operations."
    },
    {
      "name": "categories",
      "description": "Categories operations."
    },
    {
      "name": "products",
      "description": "Products operations."
    },
    {
      "name": "orders",
      "description": "Orders operations."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/carts/": {
      "get": {
        "tags": [
          "carts"
        ],
        "summary": "Get last cart for the current user.",
        "description": "Returns the last cart that the user used.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cart"
            }
          },
          "600": {
            "description": "Server Error."
          }
        }
      },
      "post": {
        "tags": [
          "carts"
        ],
        "summary": "Opens a new cart.",
        "description": "Opens a new cart for the current user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cart"
            }
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/cart-items/{cartId}": {
      "get": {
        "tags": [
          "cart-items"
        ],
        "summary": "Get current cart items.",
        "description": "Get all the items in the cart, by cart Id.\n Returns an array with cart-items.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 34
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cart-item to client"
              }
            }
          },
          "600": {
            "description": "Server error. (Validation)."
          }
        }
      }
    },
    "/cart-items/": {
      "post": {
        "tags": [
          "cart-items"
        ],
        "summary": "Add cart Item",
        "description": "Adds cart item to the current user's cart. ",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cart-item to add"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items added successfully."
          },
          "600": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "cart-items"
        ],
        "summary": "Update cart Item",
        "description": "Updates cart item to the current user's cart. ",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cart-item to update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated successfully."
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/cart-items/{cartItemId}": {
      "delete": {
        "tags": [
          "cart-items"
        ],
        "summary": "Delete cart item.",
        "description": "Deletes the cart item from the current user's cart.",
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted."
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/cart-items/by-cart/{cartId}": {
      "delete": {
        "tags": [
          "cart-items"
        ],
        "summary": "Delete all cart item from cart.",
        "description": "Deletes all the items that are related to the current cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, cart cleared."
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get last order date.",
        "description": "Get the date for the last order that the current user have purchased.\n the current user id comes from the token.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "orderDate": {
                  "type": "string",
                  "example": "2024-05-30T21:00:00.000Z"
                }
              }
            }
          },
          "600": {
            "description": "Server Error."
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Adds a new order.",
        "description": "When the user pay for the cart, this API adds a new order, close the cart, and create a receipt.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "600": {
            "description": "Server Error."
          }
        }
      }
    },
    "/orders/amount/": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get the amount of orders.",
        "description": "Get the amount of orders that were already made.",
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "example": 26
            }
          },
          "600": {
            "description": "Server Error."
          }
        }
      }
    },
    "/orders/days": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get busy days dates.",
        "description": "Get the dates of the busy days.\n A busy day means that there are 3 orders to ship on that day.\n Returns a Date array.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "2022-07-04T16:42:55.000Z"
              }
            }
          },
          "600": {
            "description": "Server Error."
          }
        }
      }
    },
    "/orders/{cartId}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get receipt.",
        "description": "Get the receipt for the cart requested at the path. \nReturns a text file to download.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "cartId",
            "type": "integer",
            "in": "path",
            "required": true,
            "example": "34"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, receipt file sent."
          },
          "600": {
            "description": "Server Error."
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get all products.",
        "description": "Return an array with all the products from the data base.",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "600": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update product.",
        "description": "Update an existing product's properties.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Product to update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated."
          },
          "401": {
            "description": "Unauthorized, no valid admin token."
          },
          "600": {
            "description": "Server error."
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add a new product.",
        "description": "Add a new product to the data base.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Product to add"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Added successfully."
          },
          "401": {
            "description": "Unauthorized, no valid admin token."
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/products/{categoryId}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get products from category.",
        "description": "Get products array from a specific category, by the category's id number.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "number",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/products/search/{searchString}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Search for products.",
        "description": "Search for a product by product name (case insensitive), returns an array.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTM0MTh9.n8eNTkM_bM7L-OqJB8o4K3eReB8e9I9w7SE9K1NM4sg"
          },
          {
            "name": "searchString",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "milk"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "600": {
            "description": "Server Error"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "description": "Returns an array[] of categories available in the database.",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Category"
              }
            }
          },
          "600": {
            "description": "Server Error."
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Log in to user's account.",
        "description": "Log in to user's account.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "a@gmail.com"
                },
                "password": {
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User verified and logged in.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "600": {
            "description": "Server error. (Validation)."
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK"
        },
        "600": {
          "description": ""
        }
      }
    },
    "/users/isExist": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "A validation route, checks if the user's id or e-mail already exist in the data base returns a boolean true if the user exist, false if it isn't.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "123456789"
                },
                "email": {
                  "example": "a@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation worked properly.\n'true' means that the user's id or e-mail exist in the date base.\n 'false' means that they doesn't exist. "
          },
          "600": {
            "description": "Server error."
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register a new user account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User to register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created"
          },
          "600": {
            "description": "Bad Request. Missing one of more of the values *or* trying to bypass distinct values restriction"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "required": [
        "cartId",
        "finalPrice",
        "shippingCity",
        "shippingStreet",
        "paymentLastDigits",
        "shippingDate"
      ],
      "properties": {
        "cartId": {
          "type": "integer",
          "example": 3
        },
        "finalPrice": {
          "type": "integer",
          "example": 444
        },
        "shippingCity": {
          "type": "integer",
          "example": "Tel-Aviv"
        },
        "shippingStreet": {
          "type": "string",
          "example": "Ha'Masger"
        },
        "paymentLastDigits": {
          "type": "integer",
          "example": 6646
        },
        "shippingDate": {
          "type": "string",
          "example": "2023-05-26 16:31:22"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [],
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjk4NzY1NDMyMSwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTY3NjN9.adP657ZmlFzSQUW_cqpiFP_6YaL4m5kZUboATP-VViY"
        },
        "firstName": {
          "type": "string",
          "example": "Avi"
        },
        "lastName": {
          "type": "string",
          "example": "Cohen"
        },
        "city": {
          "type": "string",
          "example": "Tel Aviv-Yafo"
        },
        "street": {
          "type": "string",
          "example": "Bograshov"
        },
        "userCart": {
          "$ref": "#/definitions/Cart"
        }
      }
    },
    "User to register": {
      "type": "object",
      "required": [
        "email",
        "id",
        "password",
        "firstName",
        "lastName",
        "city",
        "street"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "email@email.com"
        },
        "id": {
          "type": "string",
          "example": "023456782"
        },
        "password": {
          "type": "string",
          "example": "password123"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "city": {
          "type": "string",
          "example": "Tel-Aviv-Yafo"
        },
        "street": {
          "type": "string",
          "example": "Bograshov"
        }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "cartId": {
          "type": "integer",
          "example": "36"
        },
        "creationDate": {
          "type": "string",
          "example": "2022-07-04T16:42:55.000Z"
        },
        "isOpen": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "Cart-item to client": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 3
        },
        "productId": {
          "type": "integer",
          "example": 28
        },
        "quantity": {
          "type": "integer",
          "example": 4
        },
        "productName": {
          "type": "string",
          "example": "Baguette"
        },
        "price": {
          "type": "number",
          "example": 7.50
        },
        "productImg": {
          "type": "string",
          "example": "baguette.png"
        }
      }
    },
    "Cart-item to add": {
      "type": "object",
      "required": [
        "productId",
        "cartId",
        "quantity"
      ],
      "properties": {
        "productId": {
          "type": "integer",
          "example": 1
        },
        "cartId": {
          "type": "integer",
          "example": 32
        },
        "quantity": {
          "type": "integer",
          "example": 5
        }
      }
    },
    "Cart-item to update": {
      "type": "object",
      "required": [
        "id",
        "productId",
        "cartId",
        "quantity"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": 13
        },
        "productId": {
          "type": "integer",
          "example": 1
        },
        "cartId": {
          "type": "integer",
          "example": 32
        },
        "quantity": {
          "type": "integer",
          "example": 5
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Milk"
        },
        "price": {
          "type": "number",
          "example": 6.9
        },
        "imgUrl": {
          "type": "string",
          "example": "milk.jpg"
        },
        "categoryId": {
          "type": "number",
          "example": 2
        },
        "categoryName": {
          "type": "string",
          "example": "Dairy"
        }
      }
    },
    "Product to update": {
      "type": "object",
      "required": [
        "id",
        "name",
        "price",
        "imgUrl",
        "categoryId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": 3
        },
        "name": {
          "type": "string",
          "example": "Cola"
        },
        "price": {
          "type": "number",
          "example": 16.99
        },
        "imgUrl": {
          "type": "string",
          "example": "cola.png"
        },
        "categoryId": {
          "type": "integer",
          "example": 4
        }
      }
    },
    "Product to add": {
      "type": "object",
      "required": [
        "name",
        "price",
        "imgUrl",
        "categoryId"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Cola"
        },
        "price": {
          "type": "number",
          "example": 16.99
        },
        "imgUrl": {
          "type": "string",
          "example": "cola.jpg"
        },
        "categoryId": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Dairy"
        }
      }
    }
  }
}